[Unit]
Description=RabbitMQ message broker service instance %i

Requires=etcd.service
After=etcd.service

Requires=docker.service
After=docker.service

[Service]
TimeoutStartSec=10m
KillMode=none
Restart=always
RestartSec=10s

EnvironmentFile=/etc/coreos_metadata

ExecStartPre=-/usr/bin/docker kill rabbitmq-%i
ExecStartPre=-/usr/bin/docker rm rabbitmq-%i
ExecStartPre=/usr/bin/docker pull gainmaster/rabbitmq

#TODO: Load username and password from etcd
#TODO: Load cookie from etcd
ExecStart=/usr/bin/docker run --rm \
	  -e HOSTNAME=${PRIVATE_IPV4} \
 	  -e RABBITMQ_USE_LONGNAME=true \
    --name rabbitmq-%i \
    --env SERVICE_NAME=rabbitmq \
    --env SERVICE_ID=%i \
    --publish 4369:4369 \
    --publish 5672:5672 \
    --publish 15672:15672 \
		--publish 25672:25672 \
    --publish 35197:35197 \
    gainmaster/rabbitmq

#TODO: Find master address somewhere else
ExecStartPost=/usr/bin/bash -c "\
			RABBITMQ_MASTER_ADDRESS=$(etcdctl get /rabbitmq/master/); \
			if [ ! -z "$RABBITMQ_MASTER_ADDRESS" ]; then \
				docker exec rabbitmq-%i rabbitmqctl stop_app; \
				docker exec rabbitmq-%i rabbitmqctl join_cluster $RABBITMQ_MASTER_ADDRESS; \
				docker exec rabbitmq-%i rabbitmqctl start_app; \
			else	\
			  etcdctl set /rabbitmq/master rabbit@$RABBITMQ_MASTER_ADDRESS;	\
		  fi;"

ExecStop=/usr/bin/docker stop rabbitmq-%i

[X-Fleet]
Conflicts=rabbitmq@*.service
